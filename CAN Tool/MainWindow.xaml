<Window x:Name="window" x:Class="CAN_Tool.MainWindow"
        xmlns:fa="http://schemas.fontawesome.com/icons/" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CAN_Tool" xmlns:vm="clr-namespace:CAN_Tool.ViewModels"
        xmlns:c="clr-namespace:CAN_Tool.ViewModels.Converters" mc:Ignorable="d"
        Title="Adver CAN-Tool" Height="700" Width="1400"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}" 
        TextElement.FontWeight="Regular" TextElement.FontSize="13" 
        TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}" FontFamily="{DynamicResource MaterialDesignFont}" 
        WindowStyle="None" MouseLeftButtonDown="Window_MouseLeftButtonDown"
        Loaded="window_Loaded">
    <Window.Resources>
        <c:DataToStringConverter x:Key="DataConverter" />
        <c:FuelPumpIndicatorConverter x:Key="FuelPumpConverter" />
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <DockPanel>
        <StatusBar x:Name="MyStatusbar" DockPanel.Dock="Bottom" Background="{DynamicResource MaterialDesignCardBackground}">
            <StatusBarItem Width="auto">
                <TextBlock Text="{Binding AC2PInstance.CurrentTask.Name}" Margin="10 0 10 0"></TextBlock>
            </StatusBarItem>
            <ProgressBar Width="300" Value="{Binding AC2PInstance.CurrentTask.PercentComplete}" Height="30" Margin="5 0 5 0"></ProgressBar>
            <StatusBarItem>
                <Button Content="Cancel" Command="{Binding CancelOperationCommand}" Margin="5"></Button>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding Error, Mode=OneWay}"></TextBlock>
            </StatusBarItem>
        </StatusBar>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5">
            <Button Content="{DynamicResource b_refreshPorts}" Margin="10" Command="{Binding Path=RefreshPortListCommand}" />
            <ComboBox x:Name="PortNameList" Margin="10" MinWidth="70" ItemsSource="{Binding PortList}" SelectedItem="{Binding PortName}" />

            <Button x:Name="PortOpenButton" Margin="10" Content="Open" Command="{Binding OpenPortCommand}" />
            <Button x:Name="PortOpenButton_Copy" Margin="10" Content="Close" Command="{Binding ClosePortCommand}" />
            <ComboBox x:Name="CanBitrateField" Margin="10" MinWidth="70" ItemsSource="{Binding Path=Bitrates}" SelectedIndex="3" />
            <Button Content="Normal" Margin="10" Command="{Binding SetAdapterNormalModeCommand}" />
            <Button Content="Listen" Margin="10" Command="{Binding SetAdapterListedModeCommand}" />
            <Button Content="Self Reception" Margin="10" Command="{Binding SetAdapterSelfReceptionModeCommand}" />
            <Button Content="Stop" Margin="10" Command="{Binding StopCanAdapterCommand}" />
            <ComboBox x:Name="menuLanguage" HorizontalAlignment="Right" Margin="5"></ComboBox>
            <Button Content="Exit" Margin="10" Command="{Binding CloseApplicationCommand}" FlowDirection="RightToLeft" />
        </StackPanel>

        <DockPanel>
            <ListBox DockPanel.Dock="Top" ItemsSource="{Binding AC2PInstance.ConnectedDevices}" SelectedItem="{Binding SelectedConnectedDevice}">

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <TabControl Margin="1">
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_MailBulk" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Messages</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                    <TextBox ToolTip="Type" Width="40" Margin="5 10" Text="{Binding SelectedConnectedDevice.ID.Type,Mode=OneWay}" IsReadOnly="True" Cursor="Arrow" />
                                    <TextBox ToolTip="Adress" Width="30" Margin="5 10" Text="{Binding SelectedConnectedDevice.ID.Address,Mode=OneWay}" IsReadOnly="True" />
                                    <TextBox ToolTip="PGN" Width="40" Margin="5 10" Text="{Binding Path=CustomMessage.PGN,UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox ToolTip="Enter data in HEX format" Width="200" Margin="5 10" Text="{Binding Path=CustomMessage.Data,UpdateSourceTrigger=PropertyChanged,Converter = {StaticResource DataConverter},Mode=OneWayToSource}" />
                                    <TextBox ToolTip="Data Preview " MaxHeight="200" Margin="5 10" Text="{Binding Path=CustomMessage.DataAsText,Mode=OneWay}" IsReadOnly="True" />
                                    <Button Margin="5 10" Command="{Binding Path=SendCustomMessageCommand}">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_AngleRight" Foreground="White" />
                                        </Button.Content>
                                    </Button>
                                </StackPanel>

                            </Grid>
                            <TextBlock DockPanel.Dock="Right" MaxHeight="200" Margin="10" Text="{Binding Path=CustomMessage.VerboseInfo, Mode=OneWay}"></TextBlock>

                        </DockPanel>
                        <DockPanel>
                            <DataGrid x:Name="AC2PmessagesField" AutoGenerateColumns="False" Margin="5" FontFamily="Courier New" ItemsSource="{Binding AC2PInstance.Messages}" SelectedItem="{Binding SelectedMessage,Mode=OneWayToSource}" SelectionChanged="AC2PmessagesField_SelectionChanged">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Path = PGN}" Header="PGN" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Path = TransmitterType}" Header="FROM" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Path = TransmitterAddress}" Header="ADR" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Path = ReceiverType}" Header="TO" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Path = ReceiverAddress}" Header="ADR" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Path = DataAsText}" Header="DATA" IsReadOnly="True">
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock DockPanel.Dock="Right" Text="{Binding SelectedMessage.VerboseInfo,Mode=OneWay}"></TextBlock>
                        </DockPanel>

                    </DockPanel>

                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Regular_Keyboard" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Commands</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="10">
                            <Button Margin="10" ToolTip="Run Device" Command="{Binding StartHeaterCommand}">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="Solid_Play" Margin="2" Foreground="White" />
                                </Button.Content>
                            </Button>

                            <Button Margin="8" ToolTip="Stop Device" Command="{Binding StopHeaterCommand}">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="Solid_Stop" Margin="2" Foreground="White" />
                                </Button.Content>
                            </Button>
                            <Button Margin="8" ToolTip="Run just water pump" Command="{Binding StartPumpCommand}">Pump</Button>
                            <Button Margin="8" ToolTip="Run ventilation" Command="{Binding StartVentCommand}">Ventilation</Button>
                            <Button Content="Thermocouple calibrate" Margin="10" Command="{Binding CalibrateTermocouplesCommand}" />
                            <Button Content="Erase Failures" Margin="10" Command="{Binding ClearErrorsCommand}" />

            

                        </StackPanel>
                        
                        <StackPanel x:Name="CommandConstructor" DockPanel.Dock="Top" Orientation="Vertical" Margin="10">
                            
                            <ComboBox x:Name="CommandSelector" Margin="10" ItemsSource="{Binding CommandList}" SelectionChanged="ComboBox_SelectionChanged" />
                            
                            <Border HorizontalAlignment="Center" Margin="5" CornerRadius="10" BorderBrush="Gainsboro" BorderThickness="1">
                                <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="CommandPrevirew" TextAlignment="Center" VerticalAlignment="Center" FontSize="20" Margin="10" Text="{Binding CustomMessage.DataAsText,Mode=OneWay}"></TextBlock>
                                <Button Margin="10" Command="{Binding Path=SendCustomMessageCommand}">
                                    <Button.Content>
                                        <fa:ImageAwesome Icon="Solid_AngleRight" Foreground="White" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                            </Border>
                            

                        </StackPanel>
                        
                        <StackPanel x:Name="CommandParameterPanel" Orientation="Vertical"></StackPanel>
                    </DockPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_Wrench" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Config</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>

                        <StackPanel Grid.Row="0" Orientation="Horizontal" DockPanel.Dock="Top" Margin="10">
                            <Button Content="Read" Margin="10" Command="{Binding ReadConfigCommand}" />
                            <Button Content="Save" Margin="10" Command="{Binding SaveConfigCommand}" />
                            <Button Content="Reset" Margin="10" Command="{Binding ResetConfigCommand}" />
                        </StackPanel>
                        <DataGrid DockPanel.Dock="Top" x:Name="ConfigParameterField" Margin="5" AutoGenerateColumns="False" ItemsSource="{Binding SelectedConnectedDevice.readedParameters}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Path = Id}" Header="ID" IsReadOnly="True">
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path = idString}" Header="CODENAME" IsReadOnly="True">
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path = Value}" Header="VAVUE">
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path = rusName}" Header="DESCRIPTION" IsReadOnly="True">
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_ChartLine" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2" Text="Log and chart"></TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>
                        <StackPanel Margin="10" DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button Margin="10" Content="Start" Command="{Binding LogStartCommand}"></Button>
                            <Button Margin="10" Content="Stop" Command="{Binding LogStopCommand}"></Button>
                            <Button Margin="10" Content="Dataset"></Button>
                            <Button Margin="10" Content="Redraw" Command="{Binding ChartDrawCommand}"></Button>
                            <Button Margin="10" Content="Save Log"></Button>
                            <CheckBox Content="Autoredraw" IsChecked="{Binding AutoRedraw}" />
                            <TextBlock Text="{Binding StringFormat=Log length is {0} seconds, Path=SelectedConnectedDevice.LogCurrentPos}" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                        <Expander DockPanel.Dock="Top" Header="Dataset">
                            <DataGrid DockPanel.Dock="Top" ItemsSource="{Binding SelectedConnectedDevice.Status,Mode=OneWay}" AutoGenerateColumns="False" CanUserReorderColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Variable" Binding="{Binding Path=Name}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridCheckBoxColumn Header="Show" Binding="{Binding Path=Display}"></DataGridCheckBoxColumn>
                                    <DataGridTemplateColumn Header="Color">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Rectangle Width="30" Height="10" Fill="{Binding Path=ChartBrush}" MouseLeftButtonDown="ColorPick" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Expander>
                        <Grid>
                            <WpfPlot Name="Chart"></WpfPlot>
                        </Grid>
                    </DockPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_InfoCircle" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Status</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DataGrid ItemsSource="{Binding SelectedConnectedDevice.Status,Mode=OneWay}" AlternatingRowBackground="{DynamicResource MaterialDesignCardBackground}" AutoGenerateColumns="False" CanUserReorderColumns="False" SelectionMode="Single" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=AssignedParameter.Name,Mode=OneWay}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Value" Binding="{Binding Path=Value,Mode=OneWay}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Unit" Binding="{Binding Path=AssignedParameter.Unit,Mode=OneWay}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_BoxOpen" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Black Box</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" VerticalAlignment="Top" Margin="10">
                                <Button Content="Read Data" Margin="10" Command="{Binding ReadBlackBoxDataCommand}"></Button>
                                <Button Content="Read Errors" Margin="10" Command="{Binding ReadBlackBoxErrorsCommand}"></Button>
                                <Button Content="Erase Data" Margin="10" Command="{Binding EraseBlackBoxDataCommand}"></Button>
                                <Button Content="Erase Errors" Margin="10" Command="{Binding EraseBlackBoxErrorsCommand}"></Button>
                            </StackPanel>
                            <DataGrid ItemsSource="{Binding SelectedConnectedDevice.BBValues}" AutoGenerateColumns="False" Margin="10">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="VALUE" Binding="{Binding Path=Value}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="DESCRIPTION" Binding="{Binding Path=Description}"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
                        <DockPanel Grid.Column="1">
                            <ComboBox DockPanel.Dock="Top" x:Name="ErrorSelector" Margin="10" DisplayMemberPath="Name" ItemsSource="{Binding SelectedConnectedDevice.BBErrors, Mode=OneWay}"></ComboBox>
                            <DataGrid ItemsSource="{Binding ElementName=ErrorSelector, Path=SelectedItem.Variables}" AutoGenerateColumns="False" Margin="10">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name,Mode=OneWay}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Path=Value,Mode=OneWay}"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_Cog" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Manual</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>
                        <StackPanel Margin="10" DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button Margin="10" Content="Enter Manual" Command="{Binding EnterManualModeCommand}" />
                            <Button Margin="10" Content="Leave manual" Command="{Binding ExitManualModeCommand}"/>
                            <Button Margin="10" Content="Air blower+" Command="{Binding IncreaceManualAirBlowerCommand}"/>
                            <Button Margin="10" Content="Air blower-" Command="{Binding DecreaseManualAirBlowerCommand}"/>
                            <Button Margin="10" Content="Fuel pump+" Command="{Binding IncreaseManualFuelPumpCommand}"/>
                            <Button Margin="10" Content="Fuel pump-" Command="{Binding DecreaseFuelPumpCommand}"/>
                            <Button Margin="10" Content="Glow plug+" Command="{Binding IncreaseGlowPlugCommand}"/>
                            <Button Margin="10" Content="Glow plug-" Command="{Binding DecreaseGlowPlugCommand}"/>
                            <CheckBox Content="Water Pump" IsChecked="{Binding ManualPump}" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />

                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*"></ColumnDefinition>
                                <ColumnDefinition Width="3*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="10*"></RowDefinition>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Air Set" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" />
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding ManualAirBlower,Mode=OneWay}" HorizontalAlignment="Center"  FontSize="20" />
                                <Rectangle x:Name="SetRevRect" Grid.Column="0" Grid.Row="2"  Margin="10"></Rectangle>
                                <ProgressBar Grid.Column="0" Grid.Row="2" Value="{Binding ManualAirBlower,Mode=OneWay }" Maximum="90" Orientation="Vertical" Width="{Binding ElementName=SetRevRect,Path=ActualHeight}" Height="{Binding ElementName=SetRevRect,Path=ActualWidth}" MouseWheel="ProgressBar_MouseWheel"></ProgressBar>
                                
                                <TextBlock Grid.Column="1" Grid.Row="0" FontSize="20" Text="Air Measured" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <TextBlock Grid.Column="1" Grid.Row="1" FontSize="20" Text="{Binding SelectedConnectedDevice.RevMeasured,TargetNullValue=0,Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <Rectangle x:Name="MeasRevRect" Grid.Column="1" Grid.Row="2" Margin="10"></Rectangle>
                                <ProgressBar Grid.Column="1" Grid.Row="2" Maximum="90"  Value="{Binding SelectedConnectedDevice.RevMeasured,TargetNullValue=0,Mode=OneWay}" Foreground="Green" Orientation="Vertical" Width="{Binding ElementName=SetPumpRect,Path=ActualHeight}" Height="{Binding ElementName=SetPumpRect,Path=ActualWidth}"></ProgressBar>

                                <TextBlock Grid.Column="2" Grid.Row="0" FontSize="20" Text="Pump Set" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <TextBlock Grid.Column="2" Grid.Row="1" FontSize="20" Text="{Binding ManualFuelPump,Mode=OneWay,Converter={StaticResource FuelPumpConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <Rectangle x:Name="SetPumpRect" Grid.Column="2" Grid.Row="2" Margin="10"></Rectangle>
                                <ProgressBar Grid.Column="2" Grid.Row="2" Value="{Binding ManualFuelPump,TargetNullValue=0,Mode=OneWay}" Maximum="700" Foreground="Yellow" Orientation="Vertical" Width="{Binding ElementName=SetPumpRect,Path=ActualHeight}" Height="{Binding ElementName=SetPumpRect,Path=ActualWidth}" MouseWheel="ProgressBar_MouseWheel_1"></ProgressBar>

                                <TextBlock Grid.Column="3" Grid.Row="0" FontSize="20" Text="Glow Plug" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <TextBlock Grid.Column="3" Grid.Row="1" FontSize="20" Text="{Binding ManualGlowPlug,Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <Rectangle x:Name="SetPlugRect" Grid.Column="3" Grid.Row="2" Margin="10"></Rectangle>
                                <ProgressBar Grid.Column="3" Grid.Row="2" Value="{Binding ManualGlowPlug,TargetNullValue=0,Mode=OneWay}" Foreground="Red" Orientation="Vertical" Width="{Binding ElementName=SetPumpRect,Path=ActualHeight}" Height="{Binding ElementName=SetPumpRect,Path=ActualWidth}" MouseWheel="ProgressBar_MouseWheel_2"></ProgressBar>
                                
                                
                            </Grid>

                            <DataGrid Grid.Column="3" ItemsSource="{Binding SelectedConnectedDevice.Status,Mode=OneWay}" AlternatingRowBackground="{DynamicResource MaterialDesignCardBackground}" AutoGenerateColumns="False" CanUserReorderColumns="False" SelectionMode="Single" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name,Mode=OneWay}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Path=Value,Mode=OneWay}"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </DockPanel>

                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_FileCode" Margin="2 2 5 2" Foreground="White" />
                            <TextBlock Margin="5 2 2 2"> Firmware</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                            <Button Content="Load HEX" Margin="10" />
                            <Button Content="Enter Bootloader" Margin="10" />
                            <Button Content="Update" Margin="10" />
                            <Button Content="Start program" Margin="10" />
                        </StackPanel>
                        <StackPanel></StackPanel>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
    </DockPanel>
</Window>

    